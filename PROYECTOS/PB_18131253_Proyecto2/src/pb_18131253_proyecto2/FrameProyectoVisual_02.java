/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pb_18131253_proyecto2;

import Utilerias.JTable.ColorCeldas;
import java.awt.Color;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author adria
 */
public class FrameProyectoVisual_02 extends javax.swing.JFrame {
DefaultTableModel modelo;
    /**
     * Creates new form FrameProyectoVisual_02
     */
    public FrameProyectoVisual_02() {
        initComponents();
        JOptionPane.showMessageDialog(null, "Bienvenido :)!!"
                + "\n1-Genere los renglones con el Spiner"
                + "\n2-Capture los datos o genere los aleatorios"
                + "\n3-Calcule el consumo"
                + "\n4-Utilice las dos funciones(Colorear & Ordenar)");
        
        modelo = (DefaultTableModel)jTableDispositivos.getModel();
        jTableDispositivos.setShowGrid(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        jButSalir = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabConsumoTotal = new javax.swing.JLabel();
        jLabPromedio = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableDispositivos = new javax.swing.JTable();
        jButColorear = new javax.swing.JButton();
        jButAleatorios = new javax.swing.JButton();
        jButEjemplo = new javax.swing.JButton();
        jButConsumo = new javax.swing.JButton();
        jSpinDispositivo = new javax.swing.JSpinner();
        jButOrdenar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButBorrar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel6.setBackground(new java.awt.Color(0, 255, 255));
        jLabel6.setOpaque(true);

        jButSalir.setText("Salir");
        jButSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButSalirActionPerformed(evt);
            }
        });

        jLabel7.setText("Consumo Total");

        jLabel8.setText("Promedio");

        jLabel1.setBackground(new java.awt.Color(0, 204, 204));
        jLabel1.setFont(new java.awt.Font("Engravers MT", 1, 16)); // NOI18N
        jLabel1.setText("Lectura Inicial");
        jLabel1.setOpaque(true);

        jLabConsumoTotal.setBackground(new java.awt.Color(51, 204, 0));
        jLabConsumoTotal.setOpaque(true);

        jLabPromedio.setBackground(new java.awt.Color(0, 255, 0));
        jLabPromedio.setOpaque(true);

        jTableDispositivos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Dispositivo", "KB", "BYTES", "BITS", "KB", "BYTES", "BITS", "CONSUMO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, true, true, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTableDispositivos);
        if (jTableDispositivos.getColumnModel().getColumnCount() > 0) {
            jTableDispositivos.getColumnModel().getColumn(0).setPreferredWidth(10);
            jTableDispositivos.getColumnModel().getColumn(1).setPreferredWidth(10);
            jTableDispositivos.getColumnModel().getColumn(2).setPreferredWidth(10);
            jTableDispositivos.getColumnModel().getColumn(3).setPreferredWidth(10);
            jTableDispositivos.getColumnModel().getColumn(4).setPreferredWidth(10);
            jTableDispositivos.getColumnModel().getColumn(5).setPreferredWidth(10);
            jTableDispositivos.getColumnModel().getColumn(6).setPreferredWidth(10);
            jTableDispositivos.getColumnModel().getColumn(7).setPreferredWidth(50);
        }

        jButColorear.setText("Colorear");
        jButColorear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButColorearActionPerformed(evt);
            }
        });

        jButAleatorios.setText("Aleatorio");
        jButAleatorios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButAleatoriosActionPerformed(evt);
            }
        });

        jButEjemplo.setText("Ejemplo");
        jButEjemplo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButEjemploActionPerformed(evt);
            }
        });

        jButConsumo.setText("Calcular ");
        jButConsumo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButConsumoActionPerformed(evt);
            }
        });

        jSpinDispositivo.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinDispositivoStateChanged(evt);
            }
        });

        jButOrdenar.setText("Ordenar");
        jButOrdenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButOrdenarActionPerformed(evt);
            }
        });

        jLabel4.setText("Numero de Dispositvos");

        jLabel9.setBackground(new java.awt.Color(0, 204, 204));
        jLabel9.setFont(new java.awt.Font("Engravers MT", 1, 16)); // NOI18N
        jLabel9.setText("Lectura Final");
        jLabel9.setOpaque(true);

        jLabel5.setText("Sobre Pasan El Promedio");

        jButBorrar.setText("Borrar");
        jButBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButBorrarActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pb_18131253_proyecto2/Asignacion.PNG"))); // NOI18N

        jLabel3.setText("#18131253");

        jLabel10.setText("Jesus Adri√°n Lopez Luevanos");

        jLabel11.setText("Proyecto 2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 1002, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(46, 46, 46))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(109, 109, 109)
                                .addComponent(jLabel10))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(148, 148, 148)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel3))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(589, 589, 589)
                        .addComponent(jLabel9))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(292, 292, 292)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(52, 52, 52)
                                .addComponent(jLabel7)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabConsumoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabPromedio, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(134, 134, 134)
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jSpinDispositivo, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(57, 57, 57)
                            .addComponent(jButConsumo)
                            .addGap(18, 18, 18)
                            .addComponent(jButAleatorios)
                            .addGap(18, 18, 18)
                            .addComponent(jButEjemplo)
                            .addGap(18, 18, 18)
                            .addComponent(jButOrdenar)
                            .addGap(18, 18, 18)
                            .addComponent(jButColorear)
                            .addGap(18, 18, 18)
                            .addComponent(jButBorrar)
                            .addGap(18, 18, 18)
                            .addComponent(jButSalir))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(228, 228, 228)
                            .addComponent(jLabel1)))
                    .addContainerGap(429, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(jLabel9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addGap(3, 3, 3)
                        .addComponent(jLabel11)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addComponent(jLabConsumoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(jLabel8))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabPromedio, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(59, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(23, 23, 23)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(jSpinDispositivo)
                        .addComponent(jButConsumo)
                        .addComponent(jButAleatorios)
                        .addComponent(jButEjemplo)
                        .addComponent(jButOrdenar)
                        .addComponent(jButColorear)
                        .addComponent(jButBorrar)
                        .addComponent(jButSalir))
                    .addGap(25, 25, 25)
                    .addComponent(jLabel1)
                    .addGap(563, 563, 563)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButSalirActionPerformed
        // TODO add your handling code here:

        dispose();
    }//GEN-LAST:event_jButSalirActionPerformed

    private void jButColorearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButColorearActionPerformed
        // TODO add your handling code here:
        /**Para colorear utilice una parte del codigo del boton consultar, al tener el promedio cree un if
        * para que fuera comparando los resultadosn de ConsumoTotal y si el resultado es mayor lo colore al color indicado.
        */

        Dispositivo LecturaInicial = new Dispositivo();
        Dispositivo LecturaFinal = new Dispositivo();
        Dispositivo ConsumoFinal;

        ColorCeldas celdas = new ColorCeldas(jTableDispositivos);

        int ConsumoTotal = 0;

        for(int r=0; r<modelo.getRowCount(); r++)
        {
            LecturaInicial.setKb(Integer.parseInt(modelo.getValueAt(r, 1)+""));
            LecturaInicial.setBytes(Integer.parseInt(modelo.getValueAt(r, 2)+""));
            LecturaInicial.setBits(Integer.parseInt(modelo.getValueAt(r, 3)+""));

            LecturaFinal.setKb(Integer.parseInt(modelo.getValueAt(r, 4)+""));
            LecturaFinal.setBytes(Integer.parseInt(modelo.getValueAt(r, 5)+""));
            LecturaFinal.setBits(Integer.parseInt(modelo.getValueAt(r, 6)+""));

            ConsumoFinal = LecturaFinal.Resta(LecturaInicial);

            ConsumoTotal = ConsumoTotal + ConsumoFinal.BitsTotales();
        }

        int Promedio = (ConsumoTotal) /(modelo.getRowCount());

        for(int r=0; r<modelo.getRowCount(); r++)
        {
            LecturaInicial.setKb(Integer.parseInt(modelo.getValueAt(r, 1)+""));
            LecturaInicial.setBytes(Integer.parseInt(modelo.getValueAt(r, 2)+""));
            LecturaInicial.setBits(Integer.parseInt(modelo.getValueAt(r, 3)+""));

            LecturaFinal.setKb(Integer.parseInt(modelo.getValueAt(r, 4)+""));
            LecturaFinal.setBytes(Integer.parseInt(modelo.getValueAt(r, 5)+""));
            LecturaFinal.setBits(Integer.parseInt(modelo.getValueAt(r, 6)+""));

            ConsumoFinal = LecturaFinal.Resta(LecturaInicial);

            if(Promedio < ConsumoFinal.BitsTotales())
            {
                for(int c=0; c<modelo.getColumnCount(); c++)
                celdas.addCelda(r, c,  Color.CYAN);

                celdas.repaint();
            }

        }

    }//GEN-LAST:event_jButColorearActionPerformed

    private void jButAleatoriosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButAleatoriosActionPerformed
        // TODO add your handling code here:
        /**Generamos los Aleatorios para hacer mas practico el proyecto, y los nombres de los dispositivos se mandan a llamar de su clase
        * y son mostrados en el jTable
        */
        Random azar = new Random();

        for(int r=0; r<modelo.getRowCount(); r++)
        {
            modelo.setValueAt(NomDispositivo.nextNombreCorto(), r, 0);

            modelo.setValueAt(1 + azar.nextInt(1000), r, 1);
            modelo.setValueAt( azar.nextInt(1024), r, 2);
            modelo.setValueAt( azar.nextInt(8), r, 3);

            modelo.setValueAt(1 + azar.nextInt(1000), r, 4);
            modelo.setValueAt(azar.nextInt(1024), r, 5);
            modelo.setValueAt(azar.nextInt(8), r, 6);
        }
    }//GEN-LAST:event_jButAleatoriosActionPerformed

    private void jButEjemploActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButEjemploActionPerformed
        // TODO add your handling code here:

        jSpinDispositivo.setValue(5);

        modelo.setValueAt("BH-84", 0, 0);
        modelo.setValueAt("LD-57", 1, 0);
        modelo.setValueAt("AW-12", 2, 0);
        modelo.setValueAt("KV-91", 3, 0);
        modelo.setValueAt("SX-39", 4, 0);

        modelo.setValueAt(15+"", 0, 1);
        modelo.setValueAt(248+"", 1, 1);
        modelo.setValueAt(365+"", 2, 1);
        modelo.setValueAt(38+"", 3, 1);
        modelo.setValueAt(8+"", 4, 1);

        modelo.setValueAt(18+"", 0, 2);
        modelo.setValueAt(1012+"", 1, 2);
        modelo.setValueAt(874+"", 2, 2);
        modelo.setValueAt(1+"", 3, 2);
        modelo.setValueAt(798+"", 4, 2);

        modelo.setValueAt(6+"", 0, 3);
        modelo.setValueAt(2+"", 1, 3);
        modelo.setValueAt(0+"", 2, 3);
        modelo.setValueAt(7+"", 3, 3);
        modelo.setValueAt(3+"", 4, 3);

        modelo.setValueAt(254+"", 0, 4);
        modelo.setValueAt(450+"", 1, 4);
        modelo.setValueAt(1014+"", 2, 4);
        modelo.setValueAt(395+"", 3, 4);
        modelo.setValueAt(516+"", 4, 4);

        modelo.setValueAt(55+"", 0, 5);
        modelo.setValueAt(875+"", 1, 5);
        modelo.setValueAt(470+"", 2, 5);
        modelo.setValueAt(9+"", 3, 5);
        modelo.setValueAt(1021+"", 4, 5);

        modelo.setValueAt(3+"", 0, 6);
        modelo.setValueAt(4+"", 1, 6);
        modelo.setValueAt(5+"", 2, 6);
        modelo.setValueAt(7+"", 3, 6);
        modelo.setValueAt(4+"", 4, 6);
    }//GEN-LAST:event_jButEjemploActionPerformed

    private void jButConsumoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButConsumoActionPerformed
        // TODO add your handling code here:
        /**Para Sacar el consumo Total de los dispositivos utilice la suma de los Kb, Bytes y Bits menos su Lectura Inicial.
        * Para Sacar el promedio tuve que hacer una conversion para que me arrojara el resultado sin modificaciones del consumo total
        * y el resultado obtenido se dividia entre el modelo creado*/
        Dispositivo LecturaInicial = new Dispositivo();
        Dispositivo LecturaFinal = new Dispositivo();
        Dispositivo ConsumoFinal;
        Dispositivo Promedio = new Dispositivo();
        Dispositivo ConsumoTotal = new Dispositivo();

        for(int r=0; r<modelo.getRowCount(); r++)
        {
            LecturaInicial.setKb(Integer.parseInt(modelo.getValueAt(r, 1)+""));
            LecturaInicial.setBytes(Integer.parseInt(modelo.getValueAt(r, 2)+""));
            LecturaInicial.setBits(Integer.parseInt(modelo.getValueAt(r, 3)+""));

            LecturaFinal.setKb(Integer.parseInt(modelo.getValueAt(r, 4)+""));
            LecturaFinal.setBytes(Integer.parseInt(modelo.getValueAt(r, 5)+""));
            LecturaFinal.setBits(Integer.parseInt(modelo.getValueAt(r, 6)+""));

            ConsumoFinal = LecturaFinal.Resta(LecturaInicial);
            modelo.setValueAt(ConsumoFinal, r, 7);

            ConsumoTotal = ConsumoTotal.Suma(ConsumoFinal);

        }
        Promedio=ConsumoTotal.Conversion(ConsumoTotal.BitsTotales()/modelo.getRowCount());
        jLabConsumoTotal.setText(ConsumoTotal+"");
        jLabPromedio.setText(Promedio+"");
    }//GEN-LAST:event_jButConsumoActionPerformed

    private void jSpinDispositivoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinDispositivoStateChanged
        // TODO add your handling code here:
        modelo.setRowCount((int)jSpinDispositivo.getValue());
    }//GEN-LAST:event_jSpinDispositivoStateChanged

    private void jButOrdenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButOrdenarActionPerformed
        // TODO add your handling code here:
        /**Arreglo en Paralelos: la idea de esta manera de ordenamiento es ir tomando dos elementos y compararlos y si es
        * necesario intercambiarlos hasta que todos los elementos hayan sido comparados con la instruccion mencionada.
        */
        String [] nombres = new String[modelo.getRowCount()];
        Dispositivo [] Inicial = new Dispositivo[nombres.length];
        Dispositivo [] Final = new Dispositivo[nombres.length];
        Dispositivo [] Consumo = new Dispositivo[nombres.length];

        for(int r=0; r<modelo.getRowCount(); r++)
        {
            Dispositivo ConsumoInicial = new Dispositivo();
            Dispositivo ConsumoFinal = new Dispositivo();

            ConsumoInicial.setKb(Integer.parseInt(modelo.getValueAt(r, 1)+""));
            ConsumoInicial.setBytes(Integer.parseInt(modelo.getValueAt(r, 2)+""));
            ConsumoInicial.setBits(Integer.parseInt(modelo.getValueAt(r, 3)+""));

            ConsumoFinal.setKb(Integer.parseInt(modelo.getValueAt(r, 4)+""));
            ConsumoFinal.setBytes(Integer.parseInt(modelo.getValueAt(r, 5)+""));
            ConsumoFinal.setBits(Integer.parseInt(modelo.getValueAt(r, 6)+""));

            nombres[r] = modelo.getValueAt(r, 0)+"";
            Inicial[r] = ConsumoInicial;
            Final[r] = ConsumoFinal;
            Consumo[r] = ConsumoFinal.Resta(ConsumoInicial);
        }

        for(int i=0; i<Consumo.length-1; i++)
        for(int j=i+1; j<Consumo.length; j++)
        if(Consumo[i].BitsTotales() > Consumo[j].BitsTotales())
        {
            Dispositivo aux = Consumo[i];
            Consumo[i] = Consumo[j];
            Consumo[j] = aux;

            aux = Inicial[i];
            Inicial[i] = Inicial[j];
            Inicial[j] = aux;

            aux = Final[i];
            Final[i] = Final[j];
            Final[j] = aux;

            String auxn = nombres[i];
            nombres[i] = nombres[j];
            nombres[j] = auxn;
        }

        for(int r=0; r<modelo.getRowCount(); r++)
        {
            modelo.setValueAt(nombres[r], r, 0);

            modelo.setValueAt(Inicial[r].getKb(), r, 1);
            modelo.setValueAt(Inicial[r].getBytes(), r, 2);
            modelo.setValueAt(Inicial[r].getBits(), r, 3);

            modelo.setValueAt(Final[r].getKb(), r, 4);
            modelo.setValueAt(Final[r].getBytes(), r, 5);
            modelo.setValueAt(Final[r].getBits(), r, 6);

            modelo.setValueAt(Consumo[r], r, 7);

        }

        /**Puse la instruccion de pintar renglones pero en color blanco, para que los renglones regresen a su color normal
        * esto con la idea de evitar confusiones al momento de ejecutar la accion colorear primero y enseguida se ejecute la accion de ordenar,
        * ya que los renglones seguian pintados y el ordenamiento hacia su funcion y el resultado se ordenaba y cambiaba de posicion.
        */
        ColorCeldas celdas = new ColorCeldas(jTableDispositivos);
        for(int r=0; r<modelo.getColumnCount(); r++)
        for(int c=0; c<modelo.getColumnCount(); c++)

        celdas.addCelda(r, c, Color.WHITE);

        celdas.repaint();
    }//GEN-LAST:event_jButOrdenarActionPerformed

    private void jButBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButBorrarActionPerformed
        // TODO add your handling code here:
        /**Elimina la tabla junto con su informacion, devuelve el color de sus celdas al original y ajusta el spiner a 0*/
        while(modelo.getRowCount()>0)
        {
            modelo.removeRow(0);
            jSpinDispositivo.setValue(0);

            ColorCeldas celdas = new ColorCeldas(jTableDispositivos);
            for(int r=0; r<modelo.getColumnCount(); r++)
            for(int c=0; c<modelo.getColumnCount(); c++)

            celdas.addCelda(r, c, Color.WHITE);

            celdas.repaint();

        }

    }//GEN-LAST:event_jButBorrarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameProyectoVisual_02.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameProyectoVisual_02.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameProyectoVisual_02.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameProyectoVisual_02.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameProyectoVisual_02().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButAleatorios;
    private javax.swing.JButton jButBorrar;
    private javax.swing.JButton jButColorear;
    private javax.swing.JButton jButConsumo;
    private javax.swing.JButton jButEjemplo;
    private javax.swing.JButton jButOrdenar;
    private javax.swing.JButton jButSalir;
    private javax.swing.JLabel jLabConsumoTotal;
    private javax.swing.JLabel jLabPromedio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSpinner jSpinDispositivo;
    private javax.swing.JTable jTableDispositivos;
    // End of variables declaration//GEN-END:variables
}
